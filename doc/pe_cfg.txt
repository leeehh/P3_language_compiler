//#############################################################################################################################################################################
//协议帧报头格式：
//L2header
//Ethernet II:DMAC(6B)+SMAC(6B)+Type(2B)
//VLAN(18B)  :DMAC(6B)+SMAC(6B)+Type(2B)+TAG(2B:PRI/3b+CFI/1b+VID/12b)+Length/Type(2B)
//QinQ(22B)  :DMAC(6B)+SMAC(6B)+EType(2B)+TAG(2B:Pri/3b+CFI/1b+VID/12b)+EType(2B)+TAG(2B:Pri/3b+CFI/1b+VID/12b)+LEN/ETYPE(2B)

//MPLS(one)  :Label(20bit)+EXP(3bit)+S(1bit)+TTL(8bit)

//L3header(IPheader)
//IPv4(20B)  :Ver(4bit)+IHL(4bit)+TyoS(8bit)+TtlLen(16bit)+Iden(16bit)+Flg(3bit)+FraOffset(13bit)+TimeTOLive(8bit)+Protocol(8bit)+HdrCheSUM(16bit)+SAddr(32bit)+DAddr(32bit)
//IPv6(40B)  :Ver(4bit)+TraClass(8bit)+FlowLab(20bit)+PayloadLen(16bit)+NxtHeader(8bit)+HopLimit(8bit)+SAddr(128bit)+DAddr(128bit)

//L4header
//TCP (20B)  :SPort(16bit)+DPort(16bit)+SequNum(32bit)+AcknNum(32bit)+DataOffset(4bit)+Reserved(6bit)+URG(1bit)+ACK(1bit)+PSH(1bit)+RST(1bit)+SYN(1bit)+FIN(1bit)+Win(16bit)+CheckSUM(16bit)+UrgPoin(16bit)
//UDP ( 8B)  :SPort(2B)+DPort(2B)+Length(2B)+CheckSUM(2B)

//#############################################################################################################################################################################
//配置文件包头格式(MPLS L3VPN)：
//L2header(6B+6B+n*4B+2B)+MPLS(n*4B)  +L3header(20B)+L4header
//QinQ(22B)              +One MPLS(4B)+IPv4(20B)    +UDP(8B)

//#############################################################################################################################################################################
//l2
//cella_pb(407bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)+nxt_id(7)+bypass(2:mainbypass(1)+subbypass(1))
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22
01_00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 81 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_01_03_1//eth+vlan+ipv4
01_00 00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 88 a8 81 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_02_03_1//eth+qinq+ipv4
01_00 00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 92 00 81 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_02_03_1//eth+qinq+ipv4
01_00 00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 93 00 81 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_02_03_1//eth+qinq+ipv4
01_00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_03_03_1//eth+ipv4
01_00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 88 cc 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_04_06_2//eth+lldp
//**************************************************************************************************************************************************************************//
//cella_pc_cur(328bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))+lyr_offset(8)
000000 000000 000000 000000 000000 000000 000000 000000_cf ce 00 00 00 00 00 00_01 00 00 00 00 00 00 00_12//sub_id:01,mov {IRF_outer_vlan_high, IRF_outer_vlan_low}, {vlan.pcp,vlan.cfi,vlan.vid};set IRF_tag_type_2b, 1;set IRF_pkt_type_3b, 0;
000000 000000 000000 000000 000000 000000 000000 000000_cf ce d3 d2 00 00 00 00_02 00 00 00 00 00 00 00_16//sub_id:02,mov {IRF_outer_vlan_high, IRF_outer_vlan_low}, {qinq.pcp_o,qinq.cfi_o,qinq.vid_o};mov {IRF_inner_vlan_high, IRF_inner_vlan_low}, {qinq.pcp_i,qinq.cfi_i,qinq.vid_i};set IRF_tag_type_2b, 2;set IRF_pkt_type_3b, 0;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00_0c//sub_id:03,set IRF_tag_type_2b, 0;set IRF_pkt_type_3b, 0;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_42 00 00 00 00 00 00 00_0c//sub_id:04,set IRF_l2_protocol_flag_type_8b, 66;
//**************************************************************************************************************************************************************************//
//cella_pc_nxt(583bit*32)
//nxt_id(7)+pa_offset(3*24*8b:cellA(irf/2+fra/22)+cellB0(irf/2+fra/22)+cellB1(irf/2+fra/22))
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22
03_00 00 00 09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 0c 0d 0e 0f 11 12 13 14 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 06 07 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00//ipv4
06_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00//lldp
//**************************************************************************************************************************************************************************//
//cellb0_pb(398bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22
01_00 00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_01//eth.dmac == 0xFFFFFFFFFFFF
01_00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_02//eth.dmac[40] == 1
//**************************************************************************************************************************************************************************//
//cellb0_pc_cur(320bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_03 00 00 00 00 00 00 00//sub_id:01,set IRF_l2_type = 3;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_02 00 00 00 00 00 00 00//sub_id:02,set IRF_l2_type = 2;
//**************************************************************************************************************************************************************************//
//cellb1_pb(398bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cellb1_pc_cur(320bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))

//############################################################################################################################################################################
//l2s
//cella_pb(407bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)+nxt_id(7)+bypass(2:mainbypass(1)+subbypass(1))
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cella_pc_cur(328bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))+lyr_offset(8)

//**************************************************************************************************************************************************************************//
//cella_pc_nxt(583bit*32)
//nxt_id(7)+pa_offset(3*24*8b)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cellb0_pb(398bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cellb0_pc_cur(320bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))

//**************************************************************************************************************************************************************************//
//cellb1_pb(398bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cellb1_pc_cur(320bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))

//#############################################################################################################################################################################
//l3
//cella_pb(407bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)+nxt_id(7)+bypass(2:mainbypass(1)+subbypass(1))
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 50 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_01_09_2//ihl == 5,theProtocol == 2
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 50 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_02_03_0//ihl == 5,theProtocol == 4
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 50 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_03_0c_1//ihl == 5,theProtocol == 6
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 50 11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_04_0d_1//ihl == 5,theProtocol == 0x11
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 60 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_05_09_2//ihl == 6,theProtocol == 2
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 60 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_06_03_0//ihl == 6,theProtocol == 4
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 60 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_07_0c_1//ihl == 6,theProtocol == 6
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 60 11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_08_0d_1//ihl == 6,theProtocol == 0x11
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 70 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_09_09_2//ihl == 7,theProtocol == 2
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 70 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_0a_03_0//ihl == 7,theProtocol == 4
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 70 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_0b_0c_1//ihl == 7,theProtocol == 6
03_00 00 f0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 70 11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_0c_0d_1//ihl == 7,theProtocol == 0x11

//**************************************************************************************************************************************************************************//
//cella_pc_cur(328bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))+lyr_offset(8)
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_00 03 00 21 00 00 00 00_14//sub_id:01,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 0;set IRF_l3_encode, 3;set IRF_l3_type[1:0], 0;set IRF_l3_protocol_flag_type_8b, 33;
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_00 07 01 00 00 00 00 00_14//sub_id:02,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 0;set IRF_l3_encode, 7;set IRF_l3_type[1:0], 1;
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_00 01 02 00 00 00 00 00_14//sub_id:03,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 0;set IRF_l3_encode, 1;set IRF_l3_type[1:0], 2;
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_00 00 02 00 00 00 00 00_14//sub_id:04,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 0;set IRF_l3_encode, 0;set IRF_l3_type[1:0], 2;
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_01 03 00 21 00 00 00 00_18//sub_id:05,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 1;set IRF_l3_encode, 3;set IRF_l3_type[1:0], 0;set IRF_l3_protocol_flag_type_8b, 33;
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_01 07 01 00 00 00 00 00_18//sub_id:06,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 1;set IRF_l3_encode, 7;set IRF_l3_type[1:0], 1;
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_01 01 02 00 00 00 00 00_18//sub_id:07,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 1;set IRF_l3_encode, 1;set IRF_l3_type[1:0], 2;
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_01 00 02 00 00 00 00 00_18//sub_id:08,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 1;set IRF_l3_encode, 0;set IRF_l3_type[1:0], 2;
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_01 03 00 21 00 00 00 00_1c//sub_id:09,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 1;set IRF_l3_encode, 3;set IRF_l3_type[1:0], 0;set IRF_l3_protocol_flag_type_8b, 33;
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_01 07 01 00 00 00 00 00_1c//sub_id:0a,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 1;set IRF_l3_encode, 7;set IRF_l3_type[1:0], 1;
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_01 01 02 00 00 00 00 00_1c//sub_id:0b,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 1;set IRF_l3_encode, 1;set IRF_l3_type[1:0], 2;
400108 000000 000000 000000 000000 000000 000000 000000_c1 c8 00 00 00 00 00 00_01 00 02 00 00 00 00 00_1c//sub_id:0c,mov IRF_TOS_8b, v4.diffserv;mov IRF_ttl_8b, v4.ttl;lg IRF_TTL_EXP, 2, v4.ttl;set IRF_l3_type[3], 1;set IRF_l3_encode, 0;set IRF_l3_type[1:0], 2;

//**************************************************************************************************************************************************************************//
//cella_pc_nxt(583bit*32)
//nxt_id(7)+pa_offset(3*24*8b)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22
09_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00//igmp
03_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00//ipv4
0c_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00//tcp
0d_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00//udp
//修改后，当前应该为空，因为没有给后续报文格式

//**************************************************************************************************************************************************************************//
//cellb0_pb(398bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22
03_00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00_01//v4.srcAddr == 0x00000000  ,v4.dstAddr == 0xffffffff
03_00 00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_02//v4.srcAddr == 0x00000000  ,v4.dstAddr[31:24] == 0x7f
03_00 00 ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_03//v4.srcAddr == 0x00000000  ,v4.dstAddr[31:8] == 0xe000000
03_00 00 ff ff ff ff f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_04//v4.srcAddr == 0x00000000  ,v4.dstAddr[31:28] == 0xe
03_00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_05//v4.srcAddr == 0x00000000  ,dstAddr上述四种都不满足(graph中的else)
03_00 00 ff 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 7f 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00_06//v4.srcAddr[31:24] == 0x7f ,v4.dstAddr == 0xffffffff
03_00 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 7f 00 00 00 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_07//v4.srcAddr[31:24] == 0x7f ,v4.dstAddr[31:24] == 0x7f
03_00 00 ff 00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 7f 00 00 00 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_08//v4.srcAddr[31:24] == 0x7f ,v4.dstAddr[31:8] == 0xe000000
03_00 00 ff 00 00 00 f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 7f 00 00 00 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_09//v4.srcAddr[31:24] == 0x7f ,v4.dstAddr[31:28] == 0xe
03_00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_0a//v4.srcAddr[31:24] == 0x7f ,dstAddr上述四种都不满足(graph中的else)
03_00 00 00 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00_0b//v4.srcAddr上面两种都不满足,v4.dstAddr[31:28] == 0xffffffff
03_00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_0c//v4.srcAddr上面两种都不满足,v4.dstAddr[31:24] == 0x7f
03_00 00 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_0d//v4.srcAddr上面两种都不满足,v4.dstAddr[31:8] == 0xe000000
03_00 00 00 00 00 00 f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_0e//v4.srcAddr上面两种都不满足,v4.dstAddr[31:28] == 0xe

//**************************************************************************************************************************************************************************//
//cellb0_pc_cur(320bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 01 00 00 00 00 00 00//sub_id:01,set IRF_IPV4_IP_SPECIAL, 1;set IRF_IPV4_IP_SPECIAL, 1;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 01 00 00 00 00 00 00//sub_id:02,set IRF_IPV4_IP_SPECIAL, 1;set IRF_DIP_LB_MUL, 1;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 02 00 00 00 00 00 00//sub_id:03,set IRF_IPV4_IP_SPECIAL, 1;set IRF_DIP_LB_MUL, 2;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 04 00 00 00 00 00 00//sub_id:04,set IRF_IPV4_IP_SPECIAL, 1;set IRF_DIP_LB_MUL, 4;	
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 00 00 00 00 00 00 00//sub_id:05,set IRF_IPV4_IP_SPECIAL, 1;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 01 00 00 00 00 00 00//sub_id:06,set IRF_IPV4_SIP_LB, 1;set IRF_IPV4_IP_SPECIAL, 1;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 01 00 00 00 00 00 00//sub_id:07,set IRF_IPV4_SIP_LB, 1;set IRF_DIP_LB_MUL, 1;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 02 00 00 00 00 00 00//sub_id:08,set IRF_IPV4_SIP_LB, 1;set IRF_DIP_LB_MUL, 2;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 04 00 00 00 00 00 00//sub_id:09,set IRF_IPV4_SIP_LB, 1;set IRF_DIP_LB_MUL, 4;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 00 00 00 00 00 00 00//sub_id:0a,set IRF_IPV4_SIP_LB, 1;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 00 00 00 00 00 00 00//sub_id:0b,set IRF_IPV4_IP_SPECIAL, 1;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 00 00 00 00 00 00 00//sub_id:0c,set IRF_DIP_LB_MUL, 1;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_02 00 00 00 00 00 00 00//sub_id:0d,set IRF_DIP_LB_MUL, 2;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_04 00 00 00 00 00 00 00//sub_id:0e,set IRF_DIP_LB_MUL, 4;

//**************************************************************************************************************************************************************************//
//cellb1_pb(398bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22
03_00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_01//v4.flagOffset == 0,v4.flags == 0
03_00 00 ff f8 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00_02//v4.flagOffset == 0,v4.flags != 0

//**************************************************************************************************************************************************************************//
//cellb1_pc_cur(320bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_03 00 00 00 00 00 00 00//sub_id:01,set IRF_IP_FRAG_STATUS, 3;
000000 000000 000000 000000 000000 000000 000000 000000_00 00 00 00 00 00 00 00_01 00 00 00 00 00 00 00//sub_id:02,set IRF_IP_FRAG_STATUS, 1;

//#############################################################################################################################################################################
//l3s
//cella_pb(407bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)+nxt_id(7)+bypass(2:mainbypass(1)+subbypass(1))
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cella_pc_cur(328bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))+lyr_offset(8)

//**************************************************************************************************************************************************************************//
//cella_pc_nxt(583bit*32)
//nxt_id(7)+pa_offset(3*24*8b)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cellb0_pb(398bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cellb0_pc_cur(320bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))

//**************************************************************************************************************************************************************************//
//cellb1_pb(398bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cellb1_pc_cur(320bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))

//#############################################################################################################################################################################
//l4
//cella_pb(407bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)+nxt_id(7)+bypass(2:mainbypass(1)+subbypass(1))
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cella_pc_cur(328bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))+lyr_offset(8)

//*************************************************************************************** ***********************************************************************************//
//cella_pc_nxt(583bit*32)
//nxt_id(7)+pa_offset(3*24*8b)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cellb0_pb(398bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cellb0_pc_cur(320bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))

//**************************************************************************************************************************************************************************//
//cellb1_pb(398bit*32)
//hdr_id(7)+mask(24*8b)+value(24*8b)+sub_id(7)
//        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22

//**************************************************************************************************************************************************************************//
//cellb1_pc_cur(320bit*32)
//vliw(320:alu(8*24b)+mov(8*8b)+set(8*8b))
 
//#############################################################################################################################################################################